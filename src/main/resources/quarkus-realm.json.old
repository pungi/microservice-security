{
    "id" : "36382947-8ffa-4a8a-9881-2b7eeb84f800",
    "realm" : "quarkus",
    "notBefore" : 0,
    "defaultSignatureAlgorithm" : "RS256",
    "revokeRefreshToken" : false,
    "refreshTokenMaxReuse" : 0,
    "accessTokenLifespan" : 300,
    "accessTokenLifespanForImplicitFlow" : 900,
    "ssoSessionIdleTimeout" : 1800,
    "ssoSessionMaxLifespan" : 36000,
    "ssoSessionIdleTimeoutRememberMe" : 0,
    "ssoSessionMaxLifespanRememberMe" : 0,
    "offlineSessionIdleTimeout" : 2592000,
    "offlineSessionMaxLifespanEnabled" : false,
    "offlineSessionMaxLifespan" : 5184000,
    "clientSessionIdleTimeout" : 0,
    "clientSessionMaxLifespan" : 0,
    "clientOfflineSessionIdleTimeout" : 0,
    "clientOfflineSessionMaxLifespan" : 0,
    "accessCodeLifespan" : 60,
    "accessCodeLifespanUserAction" : 300,
    "accessCodeLifespanLogin" : 1800,
    "actionTokenGeneratedByAdminLifespan" : 43200,
    "actionTokenGeneratedByUserLifespan" : 300,
    "oauth2DeviceCodeLifespan" : 600,
    "oauth2DevicePollingInterval" : 5,
    "enabled" : true,
    "sslRequired" : "external",
    "registrationAllowed" : false,
    "registrationEmailAsUsername" : false,
    "rememberMe" : false,
    "verifyEmail" : false,
    "loginWithEmailAllowed" : true,
    "duplicateEmailsAllowed" : false,
    "resetPasswordAllowed" : false,
    "editUsernameAllowed" : false,
    "bruteForceProtected" : false,
    "permanentLockout" : false,
    "maxFailureWaitSeconds" : 900,
    "minimumQuickLoginWaitSeconds" : 60,
    "waitIncrementSeconds" : 60,
    "quickLoginCheckMilliSeconds" : 1000,
    "maxDeltaTimeSeconds" : 43200,
    "failureFactor" : 30,
    "roles" : {
      "realm" : [
       {
        "id" : "3fc80564-13ac-4e7b-9986-322f571e82bc",
        "name" : "confidential",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "36382947-8ffa-4a8a-9881-2b7eeb84f800",
        "attributes" : { }
      }, {
        "id" : "8c1abe12-62fe-4a06-ae0d-f5fb67dddbb0",
        "name" : "admin",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "36382947-8ffa-4a8a-9881-2b7eeb84f800",
        "attributes" : { }
       }, {
        "id" : "5afce544-6a3c-495f-b805-fd737cf5081e",
        "name" : "user",
        "composite" : false,
         "clientRole" : false,
        "containerId" : "36382947-8ffa-4a8a-9881-2b7eeb84f800",
         "attributes" : { }
       } ]
    },
    "webAuthnPolicyRpEntityName" : "keycloak",
    "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
    "webAuthnPolicyRpId" : "",
    "webAuthnPolicyAttestationConveyancePreference" : "not specified",
    "webAuthnPolicyAuthenticatorAttachment" : "not specified",
    "webAuthnPolicyRequireResidentKey" : "not specified",
    "webAuthnPolicyUserVerificationRequirement" : "not specified",
    "webAuthnPolicyCreateTimeout" : 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
    "webAuthnPolicyAcceptableAaguids" : [ ],
    "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
    "webAuthnPolicyPasswordlessRpId" : "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout" : 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
    "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
    "clients" : [ {
        "id" : "f362cd79-8596-407b-9e01-7c999e43d488",
        "clientId" : "account",
        "name" : "${client_account}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/quarkus/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/quarkus/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
    }, {
        "id" : "1148f171-a813-463d-bc3d-61b47c300a31",
        "clientId" : "account-console",
        "name" : "${client_account-console}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/quarkus/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/quarkus/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+",
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "32fb140b-17b0-4c5c-9138-d9a9bc2d3eb1",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
    }, {
        "id" : "16fb473f-45e3-40bb-81bf-4c7f69b92ae2",
        "clientId" : "admin-cli",
        "name" : "${client_admin-cli}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : false,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
    }, {
        "id" : "371a2b90-ebb3-4255-9d2e-bc3949d5bd2a",
        "clientId" : "broker",
        "name" : "${client_broker}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
    }, {
        "id" : "0ac5df91-e044-4051-bd03-106a3a5fb9cc",
        "clientId" : "backend-service",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "secret",
        "redirectUris" : ["*"],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : true,
        "authorizationServicesEnabled" : true,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : -1,
        "protocolMappers" : [ {
            "id" : "3eac903f-c16b-4a78-a7e8-eb8f4d402b71",
            "name" : "Client ID",
            "protocol" : "openid-connect",
            "protocolMapper" : "oidc-usersessionmodel-note-mapper",
            "consentRequired" : false,
            "config" : {
                "user.session.note" : "clientId",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "clientId",
                "jsonType.label" : "String"
            }
        }, {
            "id" : "8422cefe-7f42-4f3b-abad-5f06f7d4b748",
            "name" : "Client IP Address",
            "protocol" : "openid-connect",
            "protocolMapper" : "oidc-usersessionmodel-note-mapper",
            "consentRequired" : false,
            "config" : {
                "user.session.note" : "clientAddress",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "clientAddress",
                "jsonType.label" : "String"
            }
        }, {
            "id" : "988e47d6-2055-45eb-82d6-0b8b25c629fc",
            "name" : "Client Host",
            "protocol" : "openid-connect",
            "protocolMapper" : "oidc-usersessionmodel-note-mapper",
            "consentRequired" : false,
            "config" : {
                "user.session.note" : "clientHost",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "clientHost",
                "jsonType.label" : "String"
            }
        } ],
    } ],
    "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
    "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
    "browserSecurityHeaders" : {
      "contentSecurityPolicyReportOnly" : "",
      "xContentTypeOptions" : "nosniff",
      "xRobotsTag" : "none",
      "xFrameOptions" : "SAMEORIGIN",
      "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection" : "1; mode=block",
      "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
    },
    "smtpServer" : { },
    "eventsEnabled" : false,
    "eventsListeners" : [ "jboss-logging" ],
    "enabledEventTypes" : [ ],
    "adminEventsEnabled" : false,
    "adminEventsDetailsEnabled" : false,
    "identityProviders" : [ ],
    "identityProviderMappers" : [ ],
    "components" : {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
        "id" : "486bf667-5362-4333-82e8-6057d5b3c37a",
        "name" : "Trusted Hosts",
        "providerId" : "trusted-hosts",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : {
          "host-sending-registration-request-must-match" : [ "true" ],
          "client-uris-must-match" : [ "true" ]
        }
      }, {
        "id" : "c4b992b7-5969-4dab-845b-87b7f876f571",
        "name" : "Max Clients Limit",
        "providerId" : "max-clients",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : {
          "max-clients" : [ "200" ]
        }
      }, {
        "id" : "6844e33b-6421-4633-a808-d06856bda363",
        "name" : "Allowed Protocol Mapper Types",
        "providerId" : "allowed-protocol-mappers",
        "subType" : "authenticated",
        "subComponents" : { },
        "config" : {
          "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "saml-user-property-mapper", "oidc-address-mapper", "saml-user-attribute-mapper", "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-attribute-mapper", "saml-role-list-mapper" ]
        }
      }, {
        "id" : "8b7dd0da-a538-49db-b120-5386fc3846cf",
        "name" : "Full Scope Disabled",
        "providerId" : "scope",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : { }
      }, {
        "id" : "d5a9a762-12a0-445f-b460-511d04e11445",
        "name" : "Consent Required",
        "providerId" : "consent-required",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : { }
      }, {
        "id" : "cb11bd78-941b-4596-99e5-5ce4a41d6dc1",
        "name" : "Allowed Protocol Mapper Types",
        "providerId" : "allowed-protocol-mappers",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : {
          "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "saml-role-list-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper", "oidc-usermodel-attribute-mapper", "oidc-address-mapper" ]
        }
      }, {
        "id" : "174400f3-6a13-4818-99a2-cf0f1a5ece0f",
        "name" : "Allowed Client Scopes",
        "providerId" : "allowed-client-templates",
        "subType" : "anonymous",
        "subComponents" : { },
        "config" : {
          "allow-default-scopes" : [ "true" ]
        }
      }, {
        "id" : "d4455215-c88c-47a5-8527-9c21fef02a98",
        "name" : "Allowed Client Scopes",
        "providerId" : "allowed-client-templates",
        "subType" : "authenticated",
        "subComponents" : { },
        "config" : {
          "allow-default-scopes" : [ "true" ]
        }
      } ],
      "org.keycloak.keys.KeyProvider" : [ {
        "id" : "620e8030-7114-450c-b188-f2307fa9eaac",
        "name" : "hmac-generated",
        "providerId" : "hmac-generated",
        "subComponents" : { },
        "config" : {
          "kid" : [ "6b97cca4-f3d2-41f6-a225-ba846090df11" ],
          "secret" : [ "7cJw81x86C-kGsDRw3mJzd_M6pPO3fecUlXlL1TYRUlUR7lK6hngmkxK05LiG6swheQIZYs6UkTM1nLORncEJA" ],
          "priority" : [ "100" ],
          "algorithm" : [ "HS256" ]
        }
      }, {
        "id" : "e4432af5-5db8-4e30-8a0d-150a5ed675b5",
        "name" : "rsa-enc-generated",
        "providerId" : "rsa-enc-generated",
        "subComponents" : { },
        "config" : {
          "privateKey" : [ "MIIEowIBAAKCAQEAwVW0ULkeQ4JidUfS6+AWndVr9YqFd5zIO8iM0UXfyOesPfvwccmdJdSVTtEJTe99TujfUARRRdl3uIXr+q0E+mQyVWf0v+nzFfcQpVYq29XtfwXQK0JzvGUbWki+JnCcvXvSRnc/fjLy20psaupBT6YxYyIcvHi1JCaA7dk5iyi6FPLFkJrF0i605z+PfeWfdm07uZl4ZZ9D/+dKM4V7dnYwg8kB3x32rcIevujGs621a5ZYyl8QzJM9LMyehe3t3whNX/86vJxpg63YZyk7uhZRBvSXHZWru6Je+PEN+9rq5GYPZjg1GhCf9ty5YQ1rihAKInE1hmGIkPSUqAfXbQIDAQABAoIBABWmzvxRVwHResxOoGD5Jh9D9QS5ICxemxAS7C5NqHu78k64xdtAbIB9l8ENaQDY5swtCUFRUnbDnYRFP0HCGbIfAYIOE9tgTHBzzGHvzfnzsdbNZFxL42FAY3lPdzgf2XXhBZINrcco1ojXg1/P30OXxaUn/1beH88uHrdEYgzi719VRuoB73gyIF9P7jrl1n8UTE6wlPAOi5ZD2ERRM2bs2AW2v+dNB38CmhkWqpvjWkEEQl7JSaFDxm9mkdUopL2CPKTOM6YW3k/IVU9nMuRy1/xKDZyPO1AvNqzfMqTqDRVphAJRL+EIY6NAa6uv32g0AT1zCc3FrOuoDRvhOwMCgYEA6GkNOtu8+qqnTUdgBWUnmbcpTgw0g7tBjEzZcI4KpZfXt8IdnNBnuOtI7/Gv3fhSP9yyp60Kzl/M+JwzxbDYNuQZh9ETMFOUrdtdcyIftanttf/HhXv8yA15My3gZXSo4Zk5R15KfEAUPQyYbIY3QZkl/f3koenl2kc6/5Ncps8CgYEA1PVQNoOoAoEG7D1PU91W9NnMby+xCp4SUejS2ZajveKoEMKwYOM4Gw2Mczql+KKYDs6UU7ACrbsMSC+qgWX1b+PTXkuXkEBOt4BjnHDzVHEHZwAPKbY3dQttqZEQgDQEkhNvANseY9MNipGH2PsC+yWwvfGmXIIClsjuselIrQMCgYA0PHhWxFDDXlvgCKzSSZwO9pX4DtI20X24FQXCQIqwEWLQ0HZraoQFkgyAsae/kjKaW/ZjrYcCP5IIRsN0KX1PSRFb72gKsp52PRnR6NeLszfUcjrcC7QTGsQk9qi65O+YVSIEonLHXneuCQixS7FbsxpQ7iHXKoUY/G2MSAjJDQKBgHCHJ9mGfBLGpyfRxcck4DwFklb2NnDL0hZiFnhPdzpxOCmTFqw7pHv3Ds4coXLeR8cbNZl7Gg8/FWBXf5tcivKSyi+7dd0NfgrM1tXlgU6PYz/z8g8yb99zKIE/XB7CXd/qUO982XQaI7+i4suu54ZaBih4NlYPhNq0VhzAjlyNAoGBAKb3SZqb3wHSE+cR8fDP8hs3v7HPhPbPIpdFyzV3RKvW+3cLtSABImwcxPbk/P0CoFWkIq9kxYOVLSJNFA5ptWuG49kTpJFaYiPDu3UHOKGl2tmPLjOLp6aBVvnQb+1rfLYtNxyK8tneBaG0lSoamqoGgXuhiEeoCjgVxkSUA9dd" ],
          "keyUse" : [ "ENC" ],
          "certificate" : [ "MIICnTCCAYUCBgGCxUsqLDANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdxdWFya3VzMB4XDTIyMDgyMjExMjE1M1oXDTMyMDgyMjExMjMzM1owEjEQMA4GA1UEAwwHcXVhcmt1czCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMFVtFC5HkOCYnVH0uvgFp3Va/WKhXecyDvIjNFF38jnrD378HHJnSXUlU7RCU3vfU7o31AEUUXZd7iF6/qtBPpkMlVn9L/p8xX3EKVWKtvV7X8F0CtCc7xlG1pIviZwnL170kZ3P34y8ttKbGrqQU+mMWMiHLx4tSQmgO3ZOYsouhTyxZCaxdIutOc/j33ln3ZtO7mZeGWfQ//nSjOFe3Z2MIPJAd8d9q3CHr7oxrOttWuWWMpfEMyTPSzMnoXt7d8ITV//OrycaYOt2GcpO7oWUQb0lx2Vq7uiXvjxDfva6uRmD2Y4NRoQn/bcuWENa4oQCiJxNYZhiJD0lKgH120CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAUPXLzC6jIMVNboJeMo5THOLKqAIihwyfyESQWduZeiuSbX7fFxGRBM6oLNOnAbd08yuQnBlyNcfvTTN5vTc9LADy0bn9ukS4ZPwTNOSXWa6FcopzoKALwlVAY3JzGxoFOHK9bImlUNAbpel1xkJt0z+/yGdUWvYsRYRhLuMidb34Spi8Kt5gbbY+EQcgkHK99GNamSOqrUR1pEKOWCpncFUqXhSSSOzZlv+pbXUwEbQwUYVhS1n8kRfzkXMjuN+Ke++YFOfB314MT0pSgCtSDEboOrXIAm4HmPMyek7YZdrQqGAIWEYUafx132D954JNytzQEElKeyvbmdQJWapoWA==" ],
          "priority" : [ "100" ],
          "algorithm" : [ "RSA-OAEP" ]
        }
      }, {
        "id" : "fdb97a8d-439a-4ead-adf9-a80696fbceab",
        "name" : "aes-generated",
        "providerId" : "aes-generated",
        "subComponents" : { },
        "config" : {
          "kid" : [ "15eca0bc-c3dd-48b9-a184-374691b3f1b2" ],
          "secret" : [ "qQMFjvi_x6lbFNJBiyJV6Q" ],
          "priority" : [ "100" ]
        }
      }, {
        "id" : "b6090ad3-b34f-4bc9-b331-ca0e734bfc09",
        "name" : "rsa-generated",
        "providerId" : "rsa-generated",
        "subComponents" : { },
        "config" : {
          "privateKey" : [ "MIIEpQIBAAKCAQEApBKpDmj7d6UubF1b1NUnrRYKKDaJQDitv/7cGP2Erq7apdDdT2qdtRAhyAgBlNHT8mOL3fR0NM5/s+TNE7jtD07pSffcWpsyemILvoxfNxlqHVRjzbkW6qsrwjoVcAjVuKTdfZu3Egpcn53piiRbbOjcACuTQ4MN6B51s7indLWEjDMXMXcA4QsGoOr8Gcsj1azucz+JXrettgKlwmmjf4ciiSm+zvYtcXzj1TlM9tKji9G1vxRgc8vFVj7wgqtr0XU3sEQtHJsKuxQpmzOW7kfwD9+tOQdQs+zG3YAftsdM5xdCG2d98dxTMFekH+zyCTphjqw9nBJyZxgpNPQQNQIDAQABAoIBAALaE5x4y9GbJbMj7W2PDu7rjAI4pQYXUYuLXRiX0crfggu2FWdE1tzsQW6iqY/NgnS/1aNmTBSCU4HsH1WRSHRv8vxrlaXMYxSDyFbDRdxp49FwaBOyfMRYBwr5gleZCyTTVoCIJBR7VsTQoiUjIKTWjQxnIzYnM5SuJ24qShNsXk3FsqD3xGMAy5yEaezk/PwqnCI2x6n1rY+6nUGcjMgrBiAd1PloiNVUGPkfOS4A765/1SStivlD0sLZf4Hx385JUwNpXlo3B+NxYYig2nvjg99wCJL8rv/bzNMxtSPSakRRmchAjI5Ibl8Bu+Q7P6GSbaVIyQtd01skzlNW7sECgYEA1GzWQCCrUKb6cld3UrzMGafjfyZBgaavR+Mv26RW/5f/G9cCkpqreTUurS4XhPmmQ+VLge6eVqzRv4Ym0P+gOpmhtjyVRswckrHfXlyAsxDDEVWCqd+55TVaP58xXfwDmvM2cNX3VV8GBWz3CpxRjg39POqS9V5XYENckZcv+20CgYEAxbqu33St+fU5aAJNjPIj7DDU3FWl1boK8f71oERSDeFIVFMiPYTKnh1Gso7yAaEi4JR2W+Tq+e3Fr9CMtcHJPeUxR3+rKhV/FnXygPQQxSKblttjPRmU4x8r1VrCxV3j6G3niWP9v+tJmp5vCZDmGJvPtvkUElX/rQzGHQJa4ukCgYEAp6ZaFXRzII0YPeOwBbmBb4IkNvZvXq65yYeQ/s0d6E0ChutTWXb+fAOwGfe1kjohsZYm2J4FkyyDwZ9TxUDqKTWU/imkOqLerhv5yRRCcpB5E5YkMIOkyDQqTOoL4TwDcGghAD6uHE+JhgCwnEwwxWdfBJOxdjuFxDCFv1XOBaUCgYEAk9YIebpbedAHo+RU51UD1syL2lGPNEVteZIPREzQrOALnECsESL/+0gYW9jUyLMZyKA3/m0h4swMSm+7RQom1MhQGA00hLqd0sVNE21oPHyrqBdQE5bU4xujQloh1j9k75t8yhSg3KWm2pwqmRRldXDJ1RxWDX+PMmuilH32RkECgYEAuf1N0W7MKWNbnM/0elcdm+IIYI0kg4qRUKNyLg2vrmOTxwGTFzh1qeJK5x8vUMonnLW5vP7wIX7cTrgh79fz+W7gxXoNeuljnoZiFdk1Qu4qLFFk+c7MOGTDZZiKXTdYSgGutWptcGtgYli+x7TetFXVOxS3ppszgGdZ61onCSI=" ],
          "keyUse" : [ "SIG" ],
          "certificate" : [ "MIICnTCCAYUCBgGCxUspezANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdxdWFya3VzMB4XDTIyMDgyMjExMjE1M1oXDTMyMDgyMjExMjMzM1owEjEQMA4GA1UEAwwHcXVhcmt1czCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQSqQ5o+3elLmxdW9TVJ60WCig2iUA4rb/+3Bj9hK6u2qXQ3U9qnbUQIcgIAZTR0/Jji930dDTOf7PkzRO47Q9O6Un33FqbMnpiC76MXzcZah1UY825FuqrK8I6FXAI1bik3X2btxIKXJ+d6YokW2zo3AArk0ODDegedbO4p3S1hIwzFzF3AOELBqDq/BnLI9Ws7nM/iV63rbYCpcJpo3+HIokpvs72LXF849U5TPbSo4vRtb8UYHPLxVY+8IKra9F1N7BELRybCrsUKZszlu5H8A/frTkHULPsxt2AH7bHTOcXQhtnffHcUzBXpB/s8gk6YY6sPZwScmcYKTT0EDUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAiscT2FdZOg4rWVvL2IuDsDI6hzLJaoImDKfzSD00eY9SbqxjjUpVJlXkj+KUkJtgk+wh01gSY5s0ePW/S54T5kSAL8GNbfnRr/d6X7TmfQPgZ/+BvVwjdl5PKMtN4ISoLZqdMqjCXEXsYgrd3t+2TUfXD66DoUMRUqaQ8mqsfa1kpZOgXaJKZveiOPer4Y/SsJmp2p7CKoaSCRFMEjv2N98PiYx3TQxWtNx8BOs/3NKmIQiW5IM7PfSTV3Zxutd+LQkii0xLh5heOHHi7WP166n5Mq31OBRcm/u6k9GdPAMxPXh0JGqzKrRZPiXw3Mip9v4VXyQvo9xjrtIThQn5uQ==" ],
          "priority" : [ "100" ]
        }
      } ]
    },
    "internationalizationEnabled" : false,
    "supportedLocales" : [ ],
    "authenticationFlows" : [ {
      "id" : "aa90914c-d3f2-41b7-a3db-31bf9d56f159",
      "alias" : "Account verification options",
      "description" : "Method with which to verity the existing account",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "idp-email-verification",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "ALTERNATIVE",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "Verify Existing Account by Re-authentication",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "8f9aca4e-1af0-4d3a-acc0-3dea78658f3f",
      "alias" : "Authentication Options",
      "description" : "Authentication options.",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "basic-auth",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "basic-auth-otp",
        "authenticatorFlow" : false,
        "requirement" : "DISABLED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "auth-spnego",
        "authenticatorFlow" : false,
        "requirement" : "DISABLED",
        "priority" : 30,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "2f6b23b9-2c59-4b65-ab00-2789b296f300",
      "alias" : "Browser - Conditional OTP",
      "description" : "Flow to determine if the OTP is required for the authentication",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "auth-otp-form",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "e53b15a7-5bf9-4064-8db6-8a82e8320f47",
      "alias" : "Direct Grant - Conditional OTP",
      "description" : "Flow to determine if the OTP is required for the authentication",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "direct-grant-validate-otp",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "898b7008-e384-4df8-bca4-add09c5551d3",
      "alias" : "First broker login - Conditional OTP",
      "description" : "Flow to determine if the OTP is required for the authentication",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "auth-otp-form",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "31fb288c-b29e-4370-93cf-ae6eca103063",
      "alias" : "Handle Existing Account",
      "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "idp-confirm-link",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "Account verification options",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "0fc26a54-e662-4bfc-8bad-b16e4f9702a3",
      "alias" : "Reset - Conditional OTP",
      "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "conditional-user-configured",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "reset-otp",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "fed7521d-4732-4959-84f8-cff994343b90",
      "alias" : "User creation or linking",
      "description" : "Flow for the existing/non-existing user alternatives",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticatorConfig" : "create unique user config",
        "authenticator" : "idp-create-user-if-unique",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "ALTERNATIVE",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "Handle Existing Account",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "e7013c43-177c-48ce-bcc8-b1d3e6f57280",
      "alias" : "Verify Existing Account by Re-authentication",
      "description" : "Reauthentication of existing account",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "idp-username-password-form",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "First broker login - Conditional OTP",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "497b288a-1cf1-4974-bbed-747b0ee5c1f8",
      "alias" : "browser",
      "description" : "browser based authentication",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "auth-cookie",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "auth-spnego",
        "authenticatorFlow" : false,
        "requirement" : "DISABLED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "identity-provider-redirector",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 25,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "ALTERNATIVE",
        "priority" : 30,
        "autheticatorFlow" : true,
        "flowAlias" : "forms",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "27505ab1-6d4c-43a0-aede-d21ea45cb785",
      "alias" : "clients",
      "description" : "Base authentication for clients",
      "providerId" : "client-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "client-secret",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "client-jwt",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "client-secret-jwt",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 30,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "client-x509",
        "authenticatorFlow" : false,
        "requirement" : "ALTERNATIVE",
        "priority" : 40,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "6bfb83ac-b5de-47f9-bc4f-9f27b44d05fb",
      "alias" : "direct grant",
      "description" : "OpenID Connect Resource Owner Grant",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "direct-grant-validate-username",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "direct-grant-validate-password",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 30,
        "autheticatorFlow" : true,
        "flowAlias" : "Direct Grant - Conditional OTP",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "228dbd4d-831b-486e-900b-294b9b82766c",
      "alias" : "docker auth",
      "description" : "Used by Docker clients to authenticate against the IDP",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "docker-http-basic-authenticator",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "f4eab5c7-a717-4646-9b3d-751e72ebbea6",
      "alias" : "first broker login",
      "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticatorConfig" : "review profile config",
        "authenticator" : "idp-review-profile",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "User creation or linking",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "e63a23e9-60f0-4d94-8481-3a3355d36ac3",
      "alias" : "forms",
      "description" : "Username, password, otp and other auth forms.",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "auth-username-password-form",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "Browser - Conditional OTP",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "0e1f6a40-583d-4db5-8516-bf1f7b2f1656",
      "alias" : "http challenge",
      "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "no-cookie-redirect",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : true,
        "flowAlias" : "Authentication Options",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "5380b8c5-e19f-4cca-9c66-383f05385136",
      "alias" : "registration",
      "description" : "registration flow",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "registration-page-form",
        "authenticatorFlow" : true,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : true,
        "flowAlias" : "registration form",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "1a7bcec3-694c-4934-b164-09754f9eb926",
      "alias" : "registration form",
      "description" : "registration form",
      "providerId" : "form-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "registration-user-creation",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "registration-profile-action",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 40,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "registration-password-action",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 50,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "registration-recaptcha-action",
        "authenticatorFlow" : false,
        "requirement" : "DISABLED",
        "priority" : 60,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "57b0d393-33ff-46cc-bba0-ea476ce09b36",
      "alias" : "reset credentials",
      "description" : "Reset credentials for a user if they forgot their password or something",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "reset-credentials-choose-user",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "reset-credential-email",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 20,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticator" : "reset-password",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 30,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      }, {
        "authenticatorFlow" : true,
        "requirement" : "CONDITIONAL",
        "priority" : 40,
        "autheticatorFlow" : true,
        "flowAlias" : "Reset - Conditional OTP",
        "userSetupAllowed" : false
      } ]
    }, {
      "id" : "35a457ca-fb99-4d62-9020-0c3bda5452ab",
      "alias" : "saml ecp",
      "description" : "SAML ECP Profile Authentication Flow",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [ {
        "authenticator" : "http-basic-authenticator",
        "authenticatorFlow" : false,
        "requirement" : "REQUIRED",
        "priority" : 10,
        "autheticatorFlow" : false,
        "userSetupAllowed" : false
      } ]
    } ],
    "authenticatorConfig" : [ {
      "id" : "19668cee-4ea3-4045-9b56-a8c1ff191de9",
      "alias" : "create unique user config",
      "config" : {
        "require.password.update.after.registration" : "false"
      }
    }, {
      "id" : "70a075e5-e708-4da9-8ae8-d6ea0c87b144",
      "alias" : "review profile config",
      "config" : {
        "update.profile.on.first.login" : "missing"
      }
    } ],
    "requiredActions" : [ {
      "alias" : "CONFIGURE_TOTP",
      "name" : "Configure OTP",
      "providerId" : "CONFIGURE_TOTP",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 10,
      "config" : { }
    }, {
      "alias" : "terms_and_conditions",
      "name" : "Terms and Conditions",
      "providerId" : "terms_and_conditions",
      "enabled" : false,
      "defaultAction" : false,
      "priority" : 20,
      "config" : { }
    }, {
      "alias" : "UPDATE_PASSWORD",
      "name" : "Update Password",
      "providerId" : "UPDATE_PASSWORD",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 30,
      "config" : { }
    }, {
      "alias" : "UPDATE_PROFILE",
      "name" : "Update Profile",
      "providerId" : "UPDATE_PROFILE",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 40,
      "config" : { }
    }, {
      "alias" : "VERIFY_EMAIL",
      "name" : "Verify Email",
      "providerId" : "VERIFY_EMAIL",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 50,
      "config" : { }
    }, {
      "alias" : "delete_account",
      "name" : "Delete Account",
      "providerId" : "delete_account",
      "enabled" : false,
      "defaultAction" : false,
      "priority" : 60,
      "config" : { }
    }, {
      "alias" : "webauthn-register",
      "name" : "Webauthn Register",
      "providerId" : "webauthn-register",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 70,
      "config" : { }
    }, {
      "alias" : "webauthn-register-passwordless",
      "name" : "Webauthn Register Passwordless",
      "providerId" : "webauthn-register-passwordless",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 80,
      "config" : { }
    }, {
      "alias" : "update_user_locale",
      "name" : "Update User Locale",
      "providerId" : "update_user_locale",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 1000,
      "config" : { }
    } ],
    "browserFlow" : "browser",
    "registrationFlow" : "registration",
    "directGrantFlow" : "direct grant",
    "resetCredentialsFlow" : "reset credentials",
    "clientAuthenticationFlow" : "clients",
    "dockerAuthenticationFlow" : "docker auth",
    "attributes" : {
      "cibaBackchannelTokenDeliveryMode" : "poll",
      "cibaExpiresIn" : "120",
      "cibaAuthRequestedUserHint" : "login_hint",
      "oauth2DeviceCodeLifespan" : "600",
      "oauth2DevicePollingInterval" : "5",
      "parRequestUriLifespan" : "60",
      "cibaInterval" : "5"
    },
    "users" : [ {
      "id" : "eb4123a3-b722-4798-9af5-8957f823657a",
      "username" : "alice",
      "enabled" : true,
      "emailVerified" : true,
      "credentials" : [ {
        "type" : "password",
        "value": "alice"
      } ],
      "disableableCredentialTypes" : [ "password" ],
      "requiredActions" : [ ],
      "realmRoles" : [ "user" ],
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "1eed6a8e-a853-4597-b4c6-c4c2533546a0",
      "username" : "bob",
      "enabled" : true,
      "emailVerified" : true,
      "credentials" : [ {
        "type" : "password",
        "value": "bob"
      } ],
      "disableableCredentialTypes" : [ "password" ],
      "requiredActions" : [ ],
      "realmRoles" : [ "user" ],
      "notBefore" : 0,
      "groups" : [ ]
    }],
    "keycloakVersion" : "21.0.2",
    "userManagedAccessAllowed" : false,
    "clientProfiles" : {
      "profiles" : [ ]
    },
    "clientPolicies" : {
      "policies" : [ ]
    }
  }